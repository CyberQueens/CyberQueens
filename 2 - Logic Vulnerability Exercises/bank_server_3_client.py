"""
Guy Levin 2019 (c) All Rights Reserved

Code providing an example of each command the server supports
"""
import sys
if sys.version_info[0] < 3:
    raise Exception("Python 3 or a more recent version is required. Download Python 3 from https://www.python.org/downloads/")

import socket
import time

def start_conversation():
	s = socket.socket() # use default options: ipv4+TCP
	s.connect(("127.0.0.1", 1338))
	return s


def command_help(s):
	print(f"running command help")
	s.sendall(b"help\n")
	return s.recv(0x1000).decode('ascii')

def command_new_user(s, user_name, password):
	print(f"running command new user")
	s.sendall(("new user " + user_name + " " + password + "\n").encode())
	return s.recv(0x1000).decode('ascii')

def command_login(s, user_name, password):
	print(f"running command login")
	s.sendall(("login " + user_name + " " + password + "\n").encode())
	return s.recv(0x1000).decode('ascii')

def command_logout(s):
	print(f"running command logout")
	s.sendall(b"logout\n")
	return s.recv(0x1000).decode('ascii')

def command_show_money(s):
	print(f"running command show money")
	s.sendall(b"show money\n")
	return s.recv(0x1000).decode('ascii')

def command_transfer(s, user_name, amount):
	raise NotImplementedError("You can implement me :)")

def command_list_users(s):
	print(f"running command list users")
	s.sendall(b"list users\n")
	return s.recv(0x1000).decode('ascii')

def query_user_database(s, user_name, info_index, silent=True):
	if not silent:
		print(f"running command query user database")
	s.sendall(("query user database " + user_name + " " + str(info_index) + "\n").encode())
	# give enough time for server send both packets and for us to receive them
	time.sleep(0.5)
	return s.recv(0x1000).decode('ascii')

def talk_with_bank_server(s):
	"""example of talking with the bank server"""
	print(command_help(s))
	print(command_new_user(s, "Guy", "pa$$word"))
	print(command_login(s, "Guy", "pa$$word"))
	print(command_show_money(s))
	users = command_list_users(s)
	print(users)
	users = users[len("current users:"):-len("\nsuccess.\n")].replace(" ", "").split(",")
	print("parsed users:", users)

	print("querying user info.")
	print("Key:\n\t\t0=unknown gender (Ms./Mr./Other)\n\t\t1=female (Ms.)\n\t\t2=male (Mr.)")
	for user in users:
		response = query_user_database(s, user, 0).split("\n")[0][len("userinfo:"):]
		print(f"{user} info index 0: ", response)
		response = query_user_database(s, user, 1).split("\n")[0][len("userinfo:"):]
		print(f"{user} info index 1: ", response)

	print(command_logout(s))

def main():
	sock = start_conversation()
	talk_with_bank_server(sock)

if __name__ == '__main__':
	main()